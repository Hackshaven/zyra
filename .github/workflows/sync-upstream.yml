name: Sync from NOAA-GSL (main & staging → mirror/*, no upstream actions)

on:
  schedule:
    - cron: "*/30 * * * *"     # every 30 minutes
  workflow_dispatch:
    inputs:
      branches:
        description: "Space-separated branches to mirror from upstream"
        required: false
        default: "main staging"
      push_tags:
        description: "Also mirror tags? (true/false). Defaults to false to avoid release jobs."
        required: false
        default: "false"
      force:
        description: "Force push? (true/false)"
        required: false
        default: "true"

# GITHUB_TOKEN needs write to push to *this* repo; we are not touching workflow files after stripping.
permissions:
  contents: write

concurrency:
  group: mirror-zyra
  cancel-in-progress: false

jobs:
  sync:
    name: Mirror upstream to mirror/* (workflows stripped)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      BRANCHES: ${{ github.event.inputs.branches || 'main staging' }}
      PUSH_TAGS: ${{ github.event.inputs.push_tags || 'false' }}
      FORCE: ${{ github.event.inputs.force || 'true' }}
      UPSTREAM_URL: https://github.com/NOAA-GSL/zyra.git
      # Use canonical/case-stable path to avoid redirect noise
      MIRROR_URL: https://github.com/Hackshaven/zyra.git

    steps:
      - name: Configure Git
        run: |
          git config --global user.name "zyra-sync-bot"
          git config --global user.email "zyra-sync-bot@example.com"
          git config --global advice.detachedHead false

      - name: Clone upstream as a mirror
        run: |
          set -euo pipefail
          git clone --mirror "$UPSTREAM_URL" upstream.git

      - name: Strip upstream workflow files from history (prevent running their actions)
        run: |
          set -euo pipefail
          cd upstream.git
          # Install git-filter-repo for path rewriting
          python -m pip install --user git-filter-repo
          # Remove all files under .github/workflows from the repo history
          git filter-repo --path .github/workflows --invert-paths --force

      - name: Push selected branches (and optional tags) to mirror/*
        env:
          GITHUB_TOKEN: ${{ github.token }}   # built-in token for same-repo pushes
        run: |
          set -euo pipefail

          BRANCHES="${BRANCHES:-main staging}"
          PUSH_TAGS="${PUSH_TAGS:-false}"
          FORCE="${FORCE:-true}"
          FORCE_FLAG=""
          [ "$FORCE" = "true" ] && FORCE_FLAG="--force"

          cd upstream.git
          # Authenticated remote using built-in token
          git remote add mirror "https://x-access-token:${GITHUB_TOKEN}@${MIRROR_URL#https://}"

          # Ensure latest & prune deleted refs from upstream
          git fetch --prune origin

          # For each requested branch, push only if SHA differs (skip no-ops)
          for b in $BRANCHES; do
            if git show-ref --verify --quiet "refs/heads/$b"; then
              UP_SHA=$(git rev-parse "refs/heads/$b")
              MIR_SHA=$(git ls-remote mirror "refs/heads/mirror/$b" | awk '{print $1}' || true)
              if [ -n "${MIR_SHA}" ] && [ "$UP_SHA" = "$MIR_SHA" ]; then
                echo "mirror/$b is up-to-date ($UP_SHA); skipping push."
              else
                echo "Pushing $b → mirror/$b ($UP_SHA != ${MIR_SHA:-none})"
                git push mirror "refs/heads/$b:refs/heads/mirror/$b" $FORCE_FLAG
              fi
            else
              echo "Skip: upstream branch '$b' not found."
            fi
          done

          # Tags are where many release workflows trigger; default is OFF.
          if [ "$PUSH_TAGS" = "true" ]; then
            echo "Pushing tags (note: upstream workflows are stripped from history)."
            git fetch --tags origin
            git push mirror --tags $FORCE_FLAG
          else
            echo "Skipping tags (push_tags=false)."
          fi

      - name: Summary
        if: always()
        run: echo "Mirror (workflows stripped) complete at $(date -u +"%Y-%m-%dT%H:%M:%SZ")."
        
